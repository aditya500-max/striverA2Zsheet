Method1//Optimal
tc=O(n)
https://www.codingninjas.com/codestudio/problems/remove-duplicates-from-sorted-array_1102307?utm_source=youtube&utm_medium=affiliate&utm_campaign=striver_Arrayproblems&leftPanelTab=1
#include<bits/stdc++.h>
int removeDuplicates(vector<int> &arr, int n) {
    int count=0;
	for(int i=0;i<n-1;i++){
        if(arr[i+1]==arr[i]){
			count++;
		}
	}
	return n-count;
}
Method2// less optimal// O(nlogn)// sc=O(N)
#include<bits/stdc++.h>
int removeDuplicates(vector<int> &arr, int n) {
    set<int> s;
	for(int i=0;i<n;i++){
		s.insert(arr[i]);
	}
	int k=s.size();
	return  k;
}
Method 3 
//two pointer approach//O(n)
class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
       int i=0;
	for(int j=1;j<nums.size();j++){
      if(nums[i]!=nums[j]){
			i++;
			nums[i]=nums[j];
		}
	}
	return i+1;
		}
};
