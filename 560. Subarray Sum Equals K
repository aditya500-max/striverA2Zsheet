//optimal//using prefix sum
//similar to longest subarray with given sum k(+ as well as -)
class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
        ios::sync_with_stdio(0);
        unordered_map<int,int> m;
        int cnt=0;
        int sum=0;
        for(int i=0;i<nums.size();i++){
            sum=sum+nums[i];
         if(sum==k){
             cnt++;
         }
         int rem=sum-k;
         if(m.find(rem)!=m.end()){
        
           cnt=cnt+m[rem];
         }
         m[sum]++;



        }
        return cnt;

    }
};
